apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: logscale
  namespace: ${logscale_namespace}
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: logscale
      version: 8.0.0-next.36
      sourceRef:
        kind: HelmRepository
        name: logscale-contrib-ls
        namespace: flux-repos
      interval: 5m
  releaseName: logscale
  install:
    disableWaitForJobs: true
    remediation:
      retries: 3
  upgrade:
    disableWaitForJobs: true
  test:
    enable: false
  driftDetection:
    mode: enabled
    # ignore:
    #   - paths:
    #       - /spec/replicas
    #     target:
    #       kind: Deployment
  values:
    fullnameOverride: logscale
    platform:
      provider: aws

    logscale:
      image:
        registry: "humio"
        repository: "humio-core"
        tag: "1.179.0"
      drMode: bootstrap

      existingLicenseSecretName: logscale-license-tmp
      extraVolumes:
        - name: logscale-license
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "logscale-license"
      extraHumioVolumeMounts:
        - name: logscale-license
          mountPath: "/mnt/logscale-license/logscale-license"
          readOnly: true

      extraENV:
        - name: HUMIO_OPTS
          value: -Djava.security.manager=allow
      trustManagerConfigMap: cluster-trust-bundle
      kafka:
        manager: external
        serviceBindingSecret: ${logscale_name}-logscale-user-access
        prefixEnable: true
        topicPrefix: ${logscale_namespace}-${kafka_prefix}
        extraConfigCommon:
          # receive.buffer.bytes=65536 is the default use -1 to set to OS max
          receive.buffer.bytes: "-1"
          # send.buffer.bytes=131072 is the default use -1 to set to OS max
          send.buffer.bytes: "-1"
          # Additional external kafka configuration
          # max.partition.fetch.bytes=1048576 is the default value 3 MB should be optimal for logscale
          max.partition.fetch.bytes: "3145728"
          # linger.ms with high partition counts and sharding this small delay allows for optimal batch sizing
          # under high loads it will have no effect
          linger.ms: 5

      host: ${host}
      ingresses:
        - name: ui
          annotations:
            "helm.sh/resource-policy": "keep"
          host: ${host}
          endpoints:
            - path: /query
              pool: query-coordinator
            - path: /
              pool: ui
        - name: ingest
          annotations:
            "helm.sh/resource-policy": "keep"
          host: ingest-${host}
          endpoints:
            - path: /
              pool: ingest

      nodePools:
        - name: api
          nodePoolFeatures:
            allowedAPIRequestTypes: [OperatorInternal]
          replicas: 2
          podDisruptionBudget:
            enabled: true
            maxUnavailable: 33%
          updateStrategy:
            enableZoneAwareness: true
            maxUnavailable: 33%
            type: RollingUpdate
          resources:
            requests:
              memory: 8Gi
              cpu: 1000m
            limits:
              memory: 8Gi
              cpu: 2
          environmentVariables:
            - name: NODE_ROLES
              value: "httponly"
            - name: QUERY_COORDINATOR
              value: "false"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - amd64
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
                      - key: karpenter.k8s.aws/instance-local-nvme
                        operator: DoesNotExist
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: humio.com/node-pool
                        operator: In
                        values:
                          - logscale-api
                  topologyKey: kubernetes.io/hostname
          topologySpreadConstraints:
            - maxSkew: 2
              minDomains: 2
              whenUnsatisfiable: DoNotSchedule
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - logscale-api
          dataVolumePersistentVolumeClaimSpecTemplate:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: cluster-block-base-ext4
          service:
            type: ClusterIP
        - name: ui
          replicas: 2
          podDisruptionBudget:
            enabled: true
            maxUnavailable: 33%
          updateStrategy:
            enableZoneAwareness: true
            maxUnavailable: 33%
            type: RollingUpdate
          nodePoolFeatures:
            allowedAPIRequestTypes: [None]
          resources:
            requests:
              memory: 8Gi
              cpu: 1000m
            limits:
              memory: 8Gi
              cpu: 2
          environmentVariables:
            - name: NODE_ROLES
              value: "httponly"
            - name: QUERY_COORDINATOR
              value: "false"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - amd64
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
                      - key: karpenter.k8s.aws/instance-local-nvme
                        operator: DoesNotExist
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: humio.com/node-pool
                        operator: In
                        values:
                          - logscale-ui
                  topologyKey: kubernetes.io/hostname
          topologySpreadConstraints:
            - maxSkew: 2
              minDomains: 2
              whenUnsatisfiable: DoNotSchedule
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - logscale-ui
          dataVolumePersistentVolumeClaimSpecTemplate:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: cluster-block-base-ext4
          service:
            type: ClusterIP
        - name: ingest
          replicas: 3
          updateStrategy:
            enableZoneAwareness: true
            maxUnavailable: 33%
            type: RollingUpdate
          podDisruptionBudget:
            enabled: true
            maxUnavailable: 33%
          nodePoolFeatures:
            allowedAPIRequestTypes: [None]
          resources:
            requests:
              memory: 8Gi
              cpu: 1000m
            limits:
              memory: 8Gi
              cpu: 2
          environmentVariables:
            - name: NODE_ROLES
              value: "httponly"
            - name: QUERY_COORDINATOR
              value: "false"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - amd64
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
                      - key: karpenter.k8s.aws/instance-local-nvme
                        operator: DoesNotExist
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: humio.com/node-pool
                        operator: In
                        values:
                          - logscale-ingest
                  topologyKey: kubernetes.io/hostname
          topologySpreadConstraints:
            - maxSkew: 2
              minDomains: 2
              whenUnsatisfiable: DoNotSchedule
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - logscale-ingest
          dataVolumePersistentVolumeClaimSpecTemplate:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: cluster-block-base-ext4
          service:
            type: ClusterIP
        - name: query-coordinator
          replicas: 2
          updateStrategy:
            enableZoneAwareness: true
            maxUnavailable: 33%
            type: RollingUpdate
          podDisruptionBudget:
            enabled: true
            maxUnavailable: 33%
          nodePoolFeatures:
            allowedAPIRequestTypes: [None]
          resources:
            requests:
              memory: 8Gi
              cpu: 1000m
            limits:
              memory: 8Gi
              cpu: 2
          environmentVariables:
            - name: NODE_ROLES
              value: "httponly"
            - name: QUERY_COORDINATOR
              value: "true"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - amd64
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
                      - key: karpenter.k8s.aws/instance-local-nvme
                        operator: DoesNotExist
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: humio.com/node-pool
                        operator: In
                        values:
                          - logscale-query-coordinator
                  topologyKey: kubernetes.io/hostname
          topologySpreadConstraints:
            - maxSkew: 2
              minDomains: 2
              whenUnsatisfiable: DoNotSchedule
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - logscale-query-coordinator
          dataVolumePersistentVolumeClaimSpecTemplate:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: cluster-block-base-ext4
          service:
            type: ClusterIP
        - name: segments
          replicas: 3
          updateStrategy:
            enableZoneAwareness: true
            maxUnavailable: 33%
            type: ReplaceAllOnUpdate
          podDisruptionBudget:
            enabled: true
            maxUnavailable: 33%
          nodePoolFeatures:
            allowedAPIRequestTypes: [None]
          resources:
            requests:
              memory: 16Gi
              cpu: 4
            limits:
              memory: 16Gi
              cpu: 4
          environmentVariables:
            - name: QUERY_COORDINATOR
              value: "false"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - amd64
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
                      - key: karpenter.k8s.aws/instance-local-nvme
                        operator: Exists
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: humio.com/node-pool
                        operator: In
                        values:
                          - logscale-segments
                  topologyKey: kubernetes.io/hostname
          topologySpreadConstraints:
            - maxSkew: 2
              minDomains: 2
              whenUnsatisfiable: DoNotSchedule
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                  - key: humio.com/node-pool
                    operator: In
                    values:
                      - logscale-segments
          dataVolumePersistentVolumeClaimSpecTemplate:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 500Gi
            storageClassName: instancestore-nvme-ext4
          service:
            type: ClusterIP

    setRoot:
      enabled: true
      user: ${logscale_rootUser}
    setDynamic:
      enabled: false
    pdfRenderService:
      enabled: true

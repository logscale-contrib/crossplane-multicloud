apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: otel-collector
  namespace: kube-system
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: raw
      version: "2.0.0"
      sourceRef:
        kind: HelmRepository
        name: bedag
        namespace: flux-repos
      interval: 5m
  releaseName: otel-kafka
  targetNamespace: kube-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  test:
    enable: false
  values:
    resources:
      - apiVersion: kafka.strimzi.io/v1beta2
        kind: KafkaTopic
        metadata:
          name: otlp-spans
          namespace: shared-kafka
          annotations:
            helm.sh/resource-policy: "keep"
          labels:
            strimzi.io/cluster: shared
        spec:
          topicName: otlp_spans
          partitions: 64
          replicas: 3
          config:
            cleanup.policy: "delete"
            compression.type: producer
            min.insync.replicas: 2
            retention.ms: 86400000
            retention.bytes: -1
      - apiVersion: kafka.strimzi.io/v1beta2
        kind: KafkaTopic
        metadata:
          name: otlp-metrics
          namespace: shared-kafka
          annotations:
            helm.sh/resource-policy: "keep"
          labels:
            strimzi.io/cluster: shared
        spec:
          topicName: otlp_metrics
          partitions: 64
          replicas: 3
          config:
            cleanup.policy: "delete"
            compression.type: producer
            min.insync.replicas: 2
            retention.ms: 86400000
            retention.bytes: -1
      - apiVersion: kafka.strimzi.io/v1beta2
        kind: KafkaTopic
        metadata:
          name: otlp-logs
          namespace: shared-kafka
          annotations:
            helm.sh/resource-policy: "keep"
          labels:
            strimzi.io/cluster: shared
        spec:
          topicName: otlp_logs
          partitions: 64
          replicas: 3
          config:
            cleanup.policy: "delete"
            compression.type: producer
            min.insync.replicas: 2
            retention.ms: 86400000
            retention.bytes: -1
      - apiVersion: kafka.strimzi.io/v1beta2
        kind: KafkaUser
        metadata:
          name: otel-producer
          namespace: shared-kafka
          labels:
            strimzi.io/cluster: shared
        spec:
          authentication:
            type: scram-sha-512
          authorization:
            type: simple
            acls:
              # Example ACL rules for consuming from my-topic using consumer group my-group
              - resource:
                  type: cluster
                operations:
                  - Describe
              - resource:
                  type: topic
                  name: otlp_
                  patternType: prefix
                operations:
                  - Delete
                  - Describe
                  - DescribeConfigs
                  - Read
                  - Write
                host: "*"
      - apiVersion: access.strimzi.io/v1alpha1
        kind: KafkaAccess
        metadata:
          name: otel-producer
        spec:
          kafka:
            name: shared
            namespace: shared-kafka
            listener: tls
          user:
            kind: KafkaUser
            apiGroup: kafka.strimzi.io
            name: otel-producer
            namespace: shared-kafka
      - apiVersion: opentelemetry.io/v1beta1
        kind: OpenTelemetryCollector
        metadata:
          name: otel-node
        spec:
          mode: daemonset
          priorityClassName: system-node-critical
          updateStrategy:
            rollingUpdate:
              maxSurge: 0
              maxUnavailable: 25%
            type: RollingUpdate
          tolerations:
            - operator: Exists
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: otel-producer
                  key: bootstrap.servers
            - name: KAFKA_SASL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: otel-producer
                  key: username
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: otel-producer
                  key: password
            - name: KAFKA_SASL_MECHANISM
              valueFrom:
                secretKeyRef:
                  name: otel-producer
                  key: sasl.mechanism

          volumes:
            - name: varlogpods
              hostPath:
                path: /var/log/pods
            - name: kafka-trust-store
              configMap:
                # Provide the name of the ConfigMap containing the files you want
                # to add to the container
                name: cluster-trust-bundle
                items:
                  - key: cluster-bundle.pem
                    path: bundle.pem
          volumeMounts:
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: kafka-trust-store
              mountPath: /mnt/kafka/truststore
              readOnly: true
          config:
            receivers:
              filelog:
                include_file_path: true
                include:
                  - /var/log/pods/*/*/*.log
                operators:
                  - id: container-parser
                    type: container
              otlp:
                protocols:
                  grpc:
                    endpoint: 0.0.0.0:4317
                  http:
                    endpoint: 0.0.0.0:4318
            processors:
              memory_limiter:
                check_interval: 1s
                limit_percentage: 75
                spike_limit_percentage: 15
              batch:
                send_batch_size: 1000
                timeout: 5s

            exporters:
              debug:
                verbosity: detailed
              kafka:
                protocol_version: 3.8.0
                brokers:
                  - $${KAFKA_BOOTSTRAP_SERVERS}
                # resolve_canonical_bootstrap_servers_only: true
                client_id: otel-node
                partition_traces_by_id: true
                partition_metrics_by_resource_attributes: true
                partition_logs_by_resource_attributes: true
                auth:
                  sasl:
                    username: $${KAFKA_SASL_USERNAME}
                    password: $${KAFKA_SASL_PASSWORD}
                    mechanism: $${KAFKA_SASL_MECHANISM}
                    version: 1
                  tls:
                    ca_file: /mnt/kafka/truststore/bundle.pem
                    insecure_skip_verify: false
                producer:
                  compression: lz4
                  flush_max_messages: 1000
            service:
              pipelines:
                logs:
                  receivers: [otlp]
                  processors: [memory_limiter, batch]
                  exporters: [debug, kafka]
                traces:
                  receivers: [otlp]
                  processors: [memory_limiter, batch]
                  exporters: [debug, kafka]
                metrics:
                  receivers: [otlp]
                  processors: [memory_limiter, batch]
                  exporters: [debug, kafka]
              telemetry:
                metrics:
                  address: 0.0.0.0:8888
                logs:
                  level: DEBUG

apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik-db
  namespace: authentik
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: raw
      version: "2.0.0"
      sourceRef:
        kind: HelmRepository
        name: bedag
        namespace: flux-repos
      interval: 5m
  releaseName: authentik-db-${region_name}
  targetNamespace: authentik
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  test:
    enable: false
  values:
    templates:
      - |
        apiVersion: postgresql.cnpg.io/v1
        kind: Cluster
        metadata:
          name: authentik-db-${region_name}
        spec:
          instances: 3

          storage:
            storageClass: cluster-block-base-ext4
            size: 50Gi

          # bootstrap:
          #   recovery:
          #     source: authentik-db-${primary}
              
          replica:
            primary: authentik-db-${primary}
            source: authentik-db-${source}
          managed:
            roles:
            - name: authentik
              ensure: present
              comment: authentik
              login: true
              superuser: false
              passwordSecret:
                name: authentik-db-appid
          # Backup properties
          backup:
            barmanObjectStore:
              destinationPath: s3://${bucket_id}/partition/authentik/${region_name}
              s3Credentials:
                inheritFromIAMRole: true
              wal:
                compression: bzip2
                maxParallel: 4
          externalClusters:
          - name: authentik-db-${green}
            barmanObjectStore:
              destinationPath: s3://${bucket_id}/partition/authentik/${green}
              s3Credentials:
                inheritFromIAMRole: true
          - name: authentik-db-${blue}
            barmanObjectStore:
              destinationPath: s3://${bucket_id}/partition/authentik/${blue}
              s3Credentials:
                inheritFromIAMRole: true
          serviceAccountTemplate:
            metadata:
              annotations:
                eks.amazonaws.com/role-arn: ${role_arn}
            automountServiceAccountToken: true
      - |
        apiVersion: postgresql.cnpg.io/v1
        kind: Database
        metadata:
          generation: 1
          name: authentik
        spec:
          cluster:
            name: authentik-db-${region_name}
          name: authentik
          owner: authentik
      - |
        apiVersion: secrets-store.csi.x-k8s.io/v1
        kind: SecretProviderClass
        metadata:
          name: authentik-db-auth
        spec:
          provider: aws
          parameters:
            objects: |
                - objectName: "${db_auth_ssm}"
                  objectType: "secretsmanager"          
          secretObjects:                              # [OPTIONAL] SecretObject defines the desired state of synced K8s secret objects
          - data:
            - key: password                           # data field to populate
              objectName: authentik-db-auth                        # name of the mounted content to sync. this could be the object name or the object alias
            secretName: authentik-db-auth                     # name of the Kubernetes Secret object
            type: Opaque

name: 'Crossplane bootstrap'
on:
  push:
    branches:
      - main
    paths:
      - bootstrap/**
      - .github/workflows/bootstrap*.yml
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
env:
  tf_version: '1.10.2'
  tg_version: '0.73.14'
  working_dir: 'bootstrap/env/public'
  AWS_REGION: us-east-1
  AWS_ROLE: arn:aws:iam::042445652404:role/github-crossplane-multicloud
  TERRAGRUNT_DOWNLOAD: ${{ github.workspace }}/.terragrunt-cache
  # TG_PROVIDER_CACHE_DIR: ${{ github.workspace }}/.terragrunt-provider-cache


permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  checks:
    runs-on: ubuntu-24.04
    steps:
      - uses: eLco/setup-terragrunt@2c5116f8979bb261072ef57c97ac026cd9c27434
        with:
          terragrunt_version: ${{ env.tg_version }}
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@e708d31c3d84ac0e520fa59e11a6c465913ebfc4
        with:
          terraform_version: ${{ env.tf_version }}

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-session-name: crossplane-multicloud_bootstrap
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Checkout'
        uses: actions/checkout@main

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: changes
        with:
          list-files: 'shell'
          filters: |
            tf:
              - '**/module/versions.tf'

      # - name: Cache terragrunt
      #   id: cache-terragrunt
      #   if: steps.changes.outputs.tf == 'true'
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.TERRAGRUNT_DOWNLOAD }}
      #     key: ${{ runner.os }}-${{ runner.arch }}-terragrunt-${{ hashFiles('**/module/versions.tf') }}

      - name: tg init-upgrade
        run: terragrunt run-all init -upgrade --terragrunt-non-interactive --provider-cache
        working-directory: ${{ env.working_dir }}
        if: steps.changes.outputs.tf == 'true'
        continue-on-error: true

  deploy:
    runs-on: ubuntu-24.04
    needs: [checks]
    # environment: 'prod'
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: eLco/setup-terragrunt@2c5116f8979bb261072ef57c97ac026cd9c27434
        with:
          terragrunt_version: ${{ env.tg_version }}
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@e708d31c3d84ac0e520fa59e11a6c465913ebfc4
        with:
          terraform_version: ${{ env.tf_version }}
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-session-name: crossplane-multicloud_bootstrap
          aws-region: ${{ env.AWS_REGION }}
      - name: 'Checkout'
        uses: actions/checkout@main

      # - name: Cache terragrunt
      #   id: cache-terragrunt
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.TERRAGRUNT_DOWNLOAD }}
      #     key: ${{ runner.os }}-${{ runner.arch }}-terragrunt-${{ hashFiles('**/module/versions.tf') }}

      - name: Deploy
        run: terragrunt run-all apply --terragrunt-non-interactive --provider-cache
        working-directory: ${{ env.working_dir }}

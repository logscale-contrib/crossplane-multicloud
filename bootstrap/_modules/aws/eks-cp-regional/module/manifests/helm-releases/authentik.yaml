apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: ${namespace}
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: authentik
      version: "2024.12.1"
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-repos
      interval: 5m
  releaseName: authentik
  targetNamespace: ${namespace}
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  test:
    enable: false
  driftDetection:
    mode: enabled
    ignore:
      - paths: ["/spec/replicas"]
        target:
          kind: Deployment
  dependsOn:
    - name: authentik-db
  # valuesFrom:
  #   - kind: Secret
  #     name: authentik-db-authentik-instance
  #     valuesKey: password
  #     targetPath: authentik.postgresql.password
  # - kind: Secret
  #   name: authentik-secret-key
  #   valuesKey: secretkey
  #   targetPath: authentik.secret_key

  values:
    global:
      # envFrom:
      #   - secretRef:
      #       name: authentik-bootstrap
      env:
        - name: AUTHENTIK_SECRET_KEY
          value: "file:///mnt/secrets-store/secret-key/secret-key"
        - name: AUTHENTIK_BOOTSTRAP_PASSWORD
          value: "file:///mnt/secrets-store/akadmin/akadmin"
      #   AUTHENTIK_BOOTSTRAP_PASSWORD:
      #     secretKeyRef:
      #       key: password
      #       name: authentik-bootstrap
      #   AUTHENTIK_BOOTSTRAP_TOKEN:
      #     secretKeyRef:
      #       key: token
      #       name: authentik-bootstrap
      #   AUTHENTIK_BOOTSTRAP_EMAIL:
      #     secretKeyRef:
      #       key: email
      #       name: authentik-bootstrap
      # -- Additional volumeMounts to all deployed Deployments. Does not apply to GeoIP
      # @default -- `[]` (See [values.yaml])
      volumeMounts:
        - name: authentik-secrets-cookie-key
          mountPath: "/mnt/secrets-store/secret-key"
          readOnly: true
        - name: authentik-akadmin
          mountPath: "/mnt/secrets-store/akadmin"
          readOnly: true
        - name: authentik-postgresql
          mountPath: "/mnt/secrets/postgresql"
          readOnly: true

      # -- Additional volumes to all deployed Deployments.
      # @default -- `[]` (See [values.yaml])
      volumes:
        - name: authentik-secrets-cookie-key
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "authentik-secrets-cookie-key"
        - name: authentik-akadmin
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "authentik-akadmin"
        - name: authentik-postgresql
          secret:
            secretName: authentik-db-authentik-instance
            # items:
            #   - key: username
            #   - key: password
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule

    authentik:
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.io, and is fully opt-in
      email:
        host: ${smtp_server}
        port: ${smtp_port}
        username: ${smtp_user}
        password: ${smtp_password}
        use_tls: ${smtp_tls}
        from: ${from_email}
      error_reporting:
        enabled: false
      postgresql:
        host: authentik-db-${region_name}-rw
        user: "file:///mnt/secrets/postgresql/username"
        password: "file:///mnt/secrets/postgresql/password"
    server:
      ingress:
        enabled: true
        annotations:
          alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
          alb.ingress.kubernetes.io/ssl-redirect: "443"
          helm.sh/resource-policy: keep
        tls:
          - hosts:
              - ${host}.${domain_name}
        hosts:
          - ${host}.${domain_name}
        ingressClassName: alb-partition
      replicas: 3
      pdb:
        enabled: true
        maxUnavailable: 1
      serviceAccountName: authentik-server
      resources:
        requests:
          cpu: 2
          memory: 2Gi
        limits:
          cpu: 4
          memory: 4Gi
      # env:
      #   - name: AUTHENTIK_LISTEN__HTTP
      #     value: :9000
      #   - name: AUTHENTIK_LISTEN__HTTPS
      #     value: :9443
      #   - name: AUTHENTIK_LISTEN__METRICS
      #     value: :9300
    worker:
      replicas: 3
      pdb:
        enabled: true
        minAvailable: 1
      serviceAccountName: authentik-worker
      resources:
        requests:
          cpu: 1
          memory: 2Gi
        limits:
          cpu: 2
          memory: 4Gi
      env:
        - name: AUTHENTIK_WORKER__CONCURRENCY
          value: "8"
    redis:
      enabled: true
    additionalObjects:
      - apiVersion: secrets-store.csi.x-k8s.io/v1
        kind: SecretProviderClass
        metadata:
          name: authentik-secrets-cookie-key
        spec:
          provider: aws
          parameters:
            objects: |
              - objectName: "${authentik_cookie_key_ssm_name}"
                objectType: "secretsmanager"
                objectAlias: "secret-key"
      - apiVersion: secrets-store.csi.x-k8s.io/v1
        kind: SecretProviderClass
        metadata:
          name: authentik-secrets-akadmin
        spec:
          provider: aws
          parameters:
            objects: |
              - objectName: "${authentik_akadmin}"
                objectType: "secretsmanager"
                objectAlias: "akadmin"                
                
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          annotations:
            eks.amazonaws.com/role-arn: ${sa_server_arn}
          name: authentik-server
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          annotations:
            eks.amazonaws.com/role-arn: ${sa_worker_arn}
          name: authentik-worker

apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: logscale
  namespace: ${logscale_namespace}
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: logscale
      version: 7.1.0-next.14
      sourceRef:
        kind: HelmRepository
        name: logscale-contrib-ls
        namespace: flux-repos
      interval: 5m
  releaseName: logscale
  install:
    disableWaitForJobs: true
    remediation:
      retries: 3
  upgrade:
    disableWaitForJobs: true
  test:
    enable: false
  driftDetection:
    mode: enabled
    # ignore:
    #   - paths:
    #       - /spec/replicas
    #     target:
    #       kind: Deployment
  values:
    fullnameOverride: logscale
    platform:
      provider: aws

    logscale:
      drMode: bootstrap
      buckets:
        type: none
      auth:
        method: single-user
      fqdn: logscale.partition.${logscale_namespace}.pub.logsr.life
      fqdnInputs: logscale-ingest.partition.${logscale_namespace}.pub.logsr.life

      existingLicenseSecretName: logscale-license
      extraVolumes:
        - name: logscale-license
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "logscale-license"
      extraHumioVolumeMounts:
        - name: logscale-license
          mountPath: "/mnt/logscale-license/logscale-license"
          readOnly: true

      kafka:
        manager: strimziAccessOperator
        serviceBindingSecret: partition-logscale-user-access
        prefixEnable: true
        topicPrefix: ${logscale_namespace}-logscale-${kafka_prefix}
        extraConfigCommon:
          # receive.buffer.bytes=65536 is the default use -1 to set to OS max
          receive.buffer.bytes: -1
          # send.buffer.bytes=131072 is the default use -1 to set to OS max
          send.buffer.bytes: -1
          # Additional external kafka configuration
          # max.partition.fetch.bytes=1048576 is the default value 3 MB should be optimal for logscale
          max.partition.fetch.bytes: 3145728
          # linger.ms with high partition counts and sharding this small delay allows for optimal batch sizing
          # under high loads it will have no effect
          linger.ms: 5
          config.providers: env
          config.providers.env.class: org.apache.kafka.common.config.provider.EnvVarConfigProvider
          # ssl.truststore.location: /data/truststore/bundle.jks
          # security.protocol: SASL_SSL
          # sasl.mechanism: SCRAM-SHA-512
          # sasl.jaas.config: $${env:KAFKA_JAAS}
    setroot:
      enabled: false
    setDynamic:
      enabled: false
